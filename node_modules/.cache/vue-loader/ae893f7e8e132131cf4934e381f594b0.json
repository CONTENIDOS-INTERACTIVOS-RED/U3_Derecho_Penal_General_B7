{"remainingRequest":"/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/src/views/curso/Tema1.vue?vue&type=template&id=184e43e2&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/src/views/curso/Tema1.vue","mtime":1746335386972},{"path":"/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Penal_General_B7/U3_Derecho_Penal_General_B7/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMS4gRXNxdWVtYXMgZGVsIGRlbGl0byB5IHN1IHJlbGFjacOzbiBjb24gbGEgcHVuaWJpbGlkYWQnIikKICAuY29udGFpbmVyLnRhcmpldGEudGFyamV0YS0tYmxhbmNhLnAtNC5wLW1kLTUub3ZlcmZsb3ctaGlkZGVuCgogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctNC5tYi0zLm1iLWxnLTAKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzEucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTgKICAgICAgICBwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKSBFbCBlc3R1ZGlvIGRlIGxvcyBlc3F1ZW1hcyBkZWwgZGVsaXRvIGVzIHVubyBkZSBsb3MgYXNwZWN0b3MgbcOhcyByZWxldmFudGVzIGRlbnRybyBkZSBsYSBkb2dtw6F0aWNhIHBlbmFsLCB5YSBxdWUgcGVybWl0ZSBhbmFsaXphciBkZSBtYW5lcmEgZXN0cnVjdHVyYWRhIGN1w6FuZG8gdW5hIGNvbmR1Y3RhIHB1ZWRlIGNvbnNpZGVyYXJzZSBkZWxpY3RpdmEgeSwgZW4gY29uc2VjdWVuY2lhLCBzZXIgc2FuY2lvbmFkYS4gRXN0b3MgZXNxdWVtYXMgbm8gc29uIGFyYml0cmFyaW9zOiBoYW4gc2lkbyBkZXNhcnJvbGxhZG9zIGhpc3TDs3JpY2FtZW50ZSBhIHBhcnRpciBkZSBkaXN0aW50YXMgY29ycmllbnRlcyBkb2N0cmluYWxlcyB5IGZpbG9zw7NmaWNhcyBkZWwgZGVyZWNobyBwZW5hbCwgcXVlIGhhbiBjb250cmlidWlkbyBhIGRlbGltaXRhciBkZSBmb3JtYSBwcmVjaXNhIGxhIHJlc3BvbnNhYmlsaWRhZCBwZW5hbCAoR29sZHNjaG1pZHQsIDIwMTYpLgogICAgCiAgICAgICAgLmJnLWNvbG9yLTcucC00KGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1zdGFydAogICAgICAgICAgICAuY29sLWxnLWF1dG8KICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8yLnN2ZyIsIHN0eWxlPSJtYXgtd2lkdGg6IDkwcHgiKS5teC1hdXRvCiAgICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgICBwLm1iLTAgTGEgZXZvbHVjacOzbiBkZSBsYSBlc3RydWN0dXJhIGRlbCBkZWxpdG8gaGEgdHJhbnNpdGFkbyBkZXNkZSBtb2RlbG9zIG3DoXMgc2ltcGxlcywgY29tbyBsb3MgZGUgbGEgdGVvcsOtYSBjbMOhc2ljYSwgaGFzdGEgc2lzdGVtYXMgbcOhcyBjb21wbGVqb3MgY29tbyBsb3MgcHJvcHVlc3RvcyBwb3IgbGEgdGVvcsOtYSBmaW5hbGlzdGEuIEVsIG9iamV0aXZvIGNvbcO6biBkZSBlc3RvcyBlbmZvcXVlcyBlcyByZXNwb25kZXIgYSBsYSBwcmVndW50YSBmdW5kYW1lbnRhbDoKICAgICAgICAgICAgICBoNSDCv0VuIHF1w6kgbW9tZW50byB1bmEgY29uZHVjdGEgaHVtYW5hIHNlIGNvbnZpZXJ0ZSBlbiBkZWxpdG8geSBqdXN0aWZpY2EgbGEgaW1wb3NpY2nDs24gZGUgdW5hIHBlbmE/CiAgICAKICAgIHAubWItNCBEZW50cm8gZGUgZXN0ZSBhbsOhbGlzaXMsIGVzIGNydWNpYWwgZGlmZXJlbmNpYXIgZWwgZGVsaXRvIGRlIGxhIHB1bmliaWxpZGFkOgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTEubWItNQogICAgICAucHgtNC5weC1tZC01LnBiLW1kLTMKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLTEyCiAgICAgICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgICAgICAuY29sLWxnLTkoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTMubWItbGctMC5vcmRlci0yLm9yZGVyLWxnLTEKICAgICAgICAgICAgICAgIHVsLmxpc3RhLXVsLS1jb2xvcgogICAgICAgICAgICAgICAgICBsaS5tYi0wLmQtZmxleAogICAgICAgICAgICAgICAgICAgIGkuZmFyLmZhLWFycm93LWFsdC1jaXJjbGUtcmlnaHQuYmctY29sb3ItMTIKICAgICAgICAgICAgICAgICAgICBwLm1iLTAgRWwgZGVsaXRvIHNlIGRlZmluZSBjb21vIHVuYSBjb25kdWN0YSB0w61waWNhLCBhbnRpanVyw61kaWNhIHkgY3VscGFibGUuCiAgICAgICAgICAgICAgICAgIGxpLm1iLTAuZC1mbGV4CiAgICAgICAgICAgICAgICAgICAgaS5mYXIuZmEtYXJyb3ctYWx0LWNpcmNsZS1yaWdodC5iZy1jb2xvci0xMgogICAgICAgICAgICAgICAgICAgIHAubWItMCBMYSBwdW5pYmlsaWRhZCwgcG9yIHN1IHBhcnRlLCByZXByZXNlbnRhIHVuYSBjb25kaWNpw7NuIGFkaWNpb25hbCBxdWUgcGVybWl0ZSBvIGltcGlkZSBsYSBhcGxpY2FjacOzbiBkZSB1bmEgc2FuY2nDs24gcGVuYWwuIEF1biBjdWFuZG8gc2UgaGF5YSBjb21ldGlkbyB1biBoZWNobyBkZWxpY3Rpdm8sIHB1ZWRlbiBleGlzdGlyIGNhdXNhcyBxdWUgZXhjbHV5YW4gbGEgcGVuYSAoY29tbyBsYSBpbmltcHV0YWJpbGlkYWQgbyBlbCBwZXJkw7NuIGp1ZGljaWFsKSwgbG8gcXVlIGhhcsOtYSBxdWUgbm8gc2UgaW1wb25nYSBjYXN0aWdvIGFsZ3VubyAoR29sZHNjaG1pZHQsIDIwMTYpLgogICAgICAgICAgICAgIC5jb2wtbGctMyhkYXRhLWFvcz0iem9vbS1pbiIpLm9yZGVyLTEub3JkZXItbGctMgogICAgICAgICAgICAgICAgaW1nLmltZy1mbHVpZChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWExLzMuc3ZnJywgc3R5bGU9Im1heC13aWR0aDo0ODZweCIsIGFsdD0iIiApLm14LWF1dG8ubXgtbGctMC5tcy1sZy1hdXRvLm1iLTQubWItbGctMAogICAgCiAgICBwLm1iLTQgRXN0ZSBlbmZvcXVlIGVzcXVlbcOhdGljbyB0aWVuZSB1biBncmFuIHZhbG9yIHByw6FjdGljbywgeWEgcXVlIHBlcm1pdGUgZXN0YWJsZWNlciBjb24gY2xhcmlkYWQ6CgogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctNC5tYi0zLm1iLWxnLTAKICAgICAgICAuYmctY29sb3ItNi50ZXh0LWNlbnRlci50ZXh0LXdoaXRlLnAtNC5oLTEwMChkYXRhLWFvcz0iZmFkZS1sZWZ0IikuYWxpZ24tY29udGVudC1jZW50ZXIKICAgICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTAgU2kgc2UgaGEgcHJvZHVjaWRvIHVuIGRlbGl0by4KICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMAogICAgICAgIC5iZy1jb2xvci0xMS50ZXh0LWNlbnRlci50ZXh0LXdoaXRlLnAtNC5oLTEwMChkYXRhLWFvcz0iZmFkZS1sZWZ0IikuYWxpZ24tY29udGVudC1jZW50ZXIKICAgICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTAgU2ksIGVuIGNhc28gYWZpcm1hdGl2bywgY29ycmVzcG9uZGUgaW1wb25lciB1bmEgcGVuYS4KICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMAogICAgICAgIC5iZy1jb2xvci02LnRleHQtY2VudGVyLnRleHQtd2hpdGUucC00LmgtMTAwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKS5hbGlnbi1jb250ZW50LWNlbnRlcgogICAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikubWItMCBDdcOhbCBzZXLDrWEgbGEgc2FuY2nDs24gbcOhcyBhZGVjdWFkYSBkZSBhY3VlcmRvIGNvbiBsYSBncmF2ZWRhZCBkZWwgaGVjaG8geSBsYXMgY2lyY3Vuc3RhbmNpYXMgcGVyc29uYWxlcyBkZWwgYXV0b3IuCiAgICAKICAgIHAubWItNCBMYSBwdW5pYmlsaWRhZCBlcyBlbCByZXN1bHRhZG8gZGUgdW4gcHJvY2VzbyBqdXLDrWRpY28gcXVlIGluaWNpYSBjb24gZWwgYW7DoWxpc2lzIGRlIGxvcyBlbGVtZW50b3MgZGVsIGRlbGl0byB5IGN1bG1pbmEgY29uIGxhIGRlY2lzacOzbiBqdWRpY2lhbCBzb2JyZSBsYSBpbXBvc2ljacOzbiBvIG5vIGRlIHVuYSBwZW5hLCBsbyBxdWUgbXVlc3RyYSBzdSByZWxhY2nDs24gZGlyZWN0YSBjb24gZWwgZXNxdWVtYSBkZWwgZGVsaXRvLgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLTIubWItNQogICAgICAucC00LnAtbWQtNQogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5hbGlnbi1pdGVtcy1jZW50ZXIubWItNQogICAgICAgICAgLmNvbC1sZy0xMAogICAgICAgICAgICBJbWFnZW5JbmZvZ3JhZmljYS5jb2xvci1zZWN1bmRhcmlvCiAgICAgICAgICAgICAgdGVtcGxhdGUodi1zbG90OmltYWdlbikKICAgICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hMS80LnN2ZycsIGFsdD0nJywgc3R5bGU9Im1heC13aWR0aDogMTEwNnB4OyIpLm14LWF1dG8KICAgIAogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnAtMyh4PSIxMSUiIHk9IjQ5LjUlIiBudW1lcm89IisiKQogICAgICAgICAgICAgICAgaDUgRXNxdWVtYSBkZWwgZGVsaXRvCiAgICAgICAgICAgICAgICBwIENvbmp1bnRvIGRlIGVsZW1lbnRvcyAodGlwaWNpZGFkLCBhbnRpanVyaWRpY2lkYWQsIGN1bHBhYmlsaWRhZCkgcXVlIGRldGVybWluYW4gc2kgaGF5IGRlbGl0by4gCiAgICAKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUuYm94LXNoYWRvdy5wLTMoeD0iMzAuNSUiIHk9IjMyJSIgbnVtZXJvPSIrIikKICAgICAgICAgICAgICAgIGg1IFRpcGljaWRhZAogICAgICAgICAgICAgICAgcCBDb25jb3JkYW5jaWEgZW50cmUgbGEgY29uZHVjdGEgcmVhbGl6YWRhIHkgbGEgZGVzY3JpdGEgZW4gbGEgbGV5IHBlbmFsLgogICAgCiAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucC0zKHg9IjUwJSIgeT0iMTAlIiBudW1lcm89IisiKQogICAgICAgICAgICAgICAgaDUgQW50aWp1cmlkaWNpZGFkCiAgICAgICAgICAgICAgICBwIENvbnRyYWRpY2Npw7NuIGRlIGxhIGNvbmR1Y3RhIGNvbiBlbCBvcmRlbmFtaWVudG8ganVyw61kaWNvLCBzaW4gY2F1c2FzIGRlIGp1c3RpZmljYWNpw7NuLgogICAgCiAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucC0zKHg9IjY5LjUlIiB5PSIzMiUiIG51bWVybz0iKyIpCiAgICAgICAgICAgICAgICBoNSBDdWxwYWJpbGlkYWQKICAgICAgICAgICAgICAgIHAgSW1wdXRhY2nDs24gcGVyc29uYWwgZGVsIGhlY2hvIGFsIGF1dG9yLCBxdWllbiBhY3TDumEgY29uIGNvbm9jaW1pZW50byB5IHZvbHVudGFkLiAKICAgIAogICAgICAgICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnAtMyh4PSI4OC41JSIgeT0iNTAlIiBudW1lcm89IisiKQogICAgICAgICAgICAgICAgaDUgUHVuaWJpbGlkYWQKICAgICAgICAgICAgICAgIHAgUG9zaWJpbGlkYWQganVyw61kaWNhIGRlIGltcG9uZXIgdW5hIHBlbmEsIHVuYSB2ZXogY29tcHJvYmFkbyBlbCBkZWxpdG8geSBkZXNjYXJ0YWRhcyBleGNsdXNpb25lcy4KCiAgICAjdF8xXzEudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gMS4xXSBUZW9yw61hIENsw6FzaWNhLCBOZW9jbMOhc2ljYSB5IEZpbmFsaXN0YSBkZWwgZGVsaXRvCiAgICAKICAgIHAubWItNCBMYSBldm9sdWNpw7NuIGRlIGxhIHRlb3LDrWEgZGVsIGRlbGl0byBlbiBlbCBEZXJlY2hvIFBlbmFsIGhhIGVzdGFkbyBtYXJjYWRhIHBvciBkaXN0aW50YXMgY29ycmllbnRlcyBkb2N0cmluYWxlcyBxdWUgaGFuIGJ1c2NhZG8gZXhwbGljYXIgY8OzbW8gZGViZSBlbnRlbmRlcnNlIHkgZXN0cnVjdHVyYXJzZSBlbCBkZWxpdG8sIGFzw60gY29tbyBlc3RhYmxlY2VyIGxhcyBjb25kaWNpb25lcyBiYWpvIGxhcyBjdWFsZXMgdW5hIHBlcnNvbmEgcHVlZGUgc2VyIGNvbnNpZGVyYWRhIHBlbmFsbWVudGUgcmVzcG9uc2FibGUuIEVudHJlIGxhcyBtw6FzIGluZmx1eWVudGVzIHNlIGVuY3VlbnRyYW4gbGEgdGVvcsOtYSBjbMOhc2ljYSwgbGEgdGVvcsOtYSBuZW9jbMOhc2ljYSB5IGxhIHRlb3LDrWEgZmluYWxpc3RhLCBsYXMgY3VhbGVzIGhhbiBpbmZsdWlkbyBkZSBkaXN0aW50YXMgbWFuZXJhcyBlbiBsYSBsZWdpc2xhY2nDs24gcGVuYWwgY29sb21iaWFuYSwgZW4gZXNwZWNpYWwgZW4gbGEgTGV5IDU5OSBkZSAyMDAwLgoKICAgIGgyKGRhdGEtYW9zPSJmYWRlLWxlZnQiKSBUZW9yw61hIGNsw6FzaWNhCgogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctNC5vcmRlci0yCiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS81LnBuZyIsIGRhdGEtYW9zPSJ6b29tLWluIikKICAgICAgLmNvbC1sZy04Lm9yZGVyLTEubWItMy5tYi1sZy0wCiAgICAgICAgLmJnLWNvbG9yLTIwLnAtNShkYXRhLWFvcz0iZmFkZS1sZWZ0IikKICAgICAgICAgIHAubWItMCBGb3JtdWxhZGEgZW4gZWwgc2lnbG8gWElYIHBvciBhdXRvcmVzIGNvbW8gRnJhbnogdm9uIExpc3p0IHkgUGF1bCBKb2hhbm4gQW5zZWxtIEZldWVyYmFjaCwgbGEgdGVvcsOtYSBjbMOhc2ljYSBhZG9wdGEgdW5hIHZpc2nDs24gbWVjYW5pY2lzdGEgeSBvYmpldGl2YSBkZWwgZGVsaXRvLCBpbmZsdWVuY2lhZGEgcG9yIGVsIHBlbnNhbWllbnRvIGlsdXN0cmFkby4gQ29uc2lkZXJhIGVsIGRlbGl0byBjb21vIHVuIGFjdG8gdm9sdW50YXJpbywgdMOtcGljbywgYW50aWp1csOtZGljbyB5IGN1bHBhYmxlLCBzaW4gZW50cmFyIGVuIGVsIGFuw6FsaXNpcyBkZSBsYXMgbW90aXZhY2lvbmVzIGRlbCBhdXRvci4gUGFydGUgZGVsIHN1cHVlc3RvIGRlIHF1ZSB0b2RhcyBsYXMgcGVyc29uYXMgc29uIHJhY2lvbmFsZXMgeSBsaWJyZXMsIHkgcG9yIHRhbnRvIHJlc3BvbnNhYmxlcy4gU3UgYW7DoWxpc2lzIHNlIGNlbnRyYSBleGNsdXNpdmFtZW50ZSBlbiBsYSBjb2luY2lkZW5jaWEgZm9ybWFsIGVudHJlIGxhIGNvbmR1Y3RhIHkgZWwgdGlwbyBwZW5hbC4KICAgICAgICAuYmctY29sb3ItNS5wLTQoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAgICAgICBwLm1iLTAgPGI+UG9yIGVqZW1wbG88L2I+LCBzaSBhbGd1aWVuIGxhbnphIGludGVuY2lvbmFsbWVudGUgdW5hIHBpZWRyYSB5IHJvbXBlIGVsIHZpZHJpbyBkZSB1biBhdXRvbcOzdmlsLCBlc3RhIHRlb3LDrWEgdmVyaWZpY2Fyw61hIHNpIGxhIGNvbmR1Y3RhIGVzIHTDrXBpY2EsIGFudGlqdXLDrWRpY2EgeSBjdWxwYWJsZSwgc2luIGNvbnNpZGVyYXIgbGFzIGNpcmN1bnN0YW5jaWFzIHBlcnNvbmFsZXMgZGVsIGF1dG9yLiBGdWUgY3JpdGljYWRhIHBvciBzdSBmYWx0YSBkZSBpbmRpdmlkdWFsaXphY2nDs24gZGVsIHN1amV0byB5IHBvciBubyB0b21hciBlbiBjdWVudGEgbGFzIHBhcnRpY3VsYXJpZGFkZXMgZGVsIGNhc28gY29uY3JldG8gKENvbmdyZXNvIEludGVybmFjaW9uYWwgZGUgSsOzdmVuZXMgSW52ZXN0aWdhZG9yZXMgZW4gQ2llbmNpYXMgUGVuYWxlcywgMjAxMikuCgogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctMy5tYi0zLm1iLWxnLTAKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzYucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTkKICAgICAgICBoMihkYXRhLWFvcz0iZmFkZS1sZWZ0IikgVGVvcsOtYSBuZW9jbMOhc2ljYQogICAgICAgIHAubWItNSBEZXNhcnJvbGxhZGEgYSBpbmljaW9zIGRlbCBzaWdsbyBYWCBwb3IgYXV0b3JlcyBjb21vIFJlaW5oYXJkIEZyYW5rLCBGcmFueiB2b24gTGlzenQgKGVuIHN1IGV0YXBhIG1hZHVyYSkgeSBFZG11bmQgTWV6Z2VyLCBlc3RhIGNvcnJpZW50ZSBtYW50aWVuZSBsYSBlc3RydWN0dXJhIHRyaXBhcnRpdGEgZGVsIGRlbGl0bywgcGVybyBpbmNvcnBvcmEgdW5hIHZpc2nDs24gbcOhcyBzdWJqZXRpdmEgeSBodW1hbmlzdGEuIExhIGN1bHBhYmlsaWRhZCBkZWphIGRlIHNlciB1biBzaW1wbGUgcHJlc3VwdWVzdG8geSBzZSBjb252aWVydGUgZW4gdW4ganVpY2lvIGNvbXBsZWpvIHF1ZSBleGlnZSB2YWxvcmFyIGxhIGltcHV0YWJpbGlkYWQgZGVsIGF1dG9yLCBzdSBjb25vY2ltaWVudG8gZGUgbGEgaWxpY2l0dWQgeSBsYSBleGlnaWJpbGlkYWQgZGUgb3RyYSBjb25kdWN0YS4KICAgIAogICAgICAgIC5iZy1jb2xvci0zLnAtNChkYXRhLWFvcz0iZmFkZS1sZWZ0IikKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtc3RhcnQKICAgICAgICAgICAgLmNvbC1sZy1hdXRvLm1iLTMubWItbGctMAogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzcuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICAgIHAubWItMCBBc8OtLCBzaSB1bmEgcGVyc29uYSBjb24gZGlzY2FwYWNpZGFkIG1lbnRhbCBzZXZlcmEgbWF0YSBhIG90cmEgZW4gdW4gYXRhcXVlIGRlIGlyYSwgZXN0YSB0ZW9yw61hIGNvbmNsdWlyw61hIHF1ZSwgYXVucXVlIGVsIGhlY2hvIGVzIHTDrXBpY28geSBhbnRpanVyw61kaWNvLCBubyBoYXkgY3VscGFiaWxpZGFkIHBvciBmYWx0YSBkZSBpbXB1dGFiaWxpZGFkLiBBcG9ydGEgdW4gZW5mb3F1ZSBtw6FzIGp1c3RvIGFsIGNvbnNpZGVyYXIgbGFzIGNvbmRpY2lvbmVzIGluZGl2aWR1YWxlcyBkZWwgYXV0b3IsIGxvIHF1ZSByZXByZXNlbnRhIHVuIGF2YW5jZSBoYWNpYSB1bmEganVzdGljaWEgcGVuYWwgaW5kaXZpZHVhbGl6YWRhLgogICAgCiAgICBoMi5tYi01KGRhdGEtYW9zPSJmYWRlLWxlZnQiKSBUZW9yw61hIGZpbmFsaXN0YQoKICAgIC5yb3cubWItNQogICAgICAuY29sLWxnLTQubWItMy5tYi1sZy0wCiAgICAgICAgLmJnLWNvbG9yLTEucC0zLmgtMTAwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikgUHJvcHVlc3RhIGVuIGVsIHNpZ2xvIFhYIHBvciBIYW5zIFdlbHplbCwgbGEgdGVvcsOtYSBmaW5hbGlzdGEgaW50cm9kdWNlIHVuYSB2aXNpw7NuIHRlbGVvbMOzZ2ljYSBkZSBsYSBhY2Npw7NuLCBlbnRlbmRpZW5kbyBxdWUgdG9kbyBhY3RvIGh1bWFubyBlcyB1biBhY3RvIGZpbmFsLCBlcyBkZWNpciwgb3JpZW50YWRvIGEgdW4gcHJvcMOzc2l0by4gQSBkaWZlcmVuY2lhIGRlIGxhcyB0ZW9yw61hcyBhbnRlcmlvcmVzLCBlbCBmaW5hbGlzbW8gaW5jb3Jwb3JhIGRlc2RlIGVsIGluaWNpbyBlbiBlbCB0aXBvIHBlbmFsIGxvcyBlbGVtZW50b3Mgc3ViamV0aXZvcyBkZWwgZG9sbyB5IGxhIGN1bHBhLiBFc3RvIHBlcm1pdGUgZGlzdGluZ3VpciBjb24gbWF5b3IgY2xhcmlkYWQgZW50cmUgY29uZHVjdGFzIGRvbG9zYXMsIGN1bHBvc2FzIHkgcHJldGVyaW50ZW5jaW9uYWxlcy4KICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMAogICAgICAgIGZpZ3VyZQogICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvOC5wbmciIGRhdGEtYW9zPSJ6b29tLWluIikKICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMAogICAgICAgIC5iZy1jb2xvci03LnAtMy5oLTEwMChkYXRhLWFvcz0iZmFkZS1sZWZ0IikKICAgICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIFBvciBlamVtcGxvLCBzaSB1bmEgcGVyc29uYSBkaXNwYXJhIHVuIGFybWEgZHVyYW50ZSB1bmEgcmnDsWEgeSBtYXRhIGEgb3RyYSwgZWwgZmluYWxpc21vIGFuYWxpemEgbGEgaW50ZW5jacOzbiBkZWwgYXV0b3I6IHNpIHF1ZXLDrWEgbWF0YXIsIGVzIGhvbWljaWRpbyBkb2xvc287IHNpIGZ1ZSBhY2NpZGVudGFsLCBjdWxwb3NvOyB5IHNpIHNvbG8gcXVpc28gaGVyaXIgcGVybyBjYXVzw7MgbGEgbXVlcnRlLCBlcyBob21pY2lkaW8gcHJldGVyaW50ZW5jaW9uYWwgKGFydC4gMTA1IEMuUC4pLiBFc3RlIGVuZm9xdWUgcGVybWl0ZSB1biBhbsOhbGlzaXMgbcOhcyBwcm9mdW5kbyBkZWwgZG9taW5pbyBkZWwgaGVjaG8geSBsYSBpbnRlcnZlbmNpw7NuIGNvbnNjaWVudGUgZGUgY2FkYSBwYXJ0w61jaXBlLgogICAgCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci02Lm1iLTUKICAgICAgLnB4LTQucHgtbWQtNS5weS00CiAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgIC5jb2wtbGctYXV0by5tYi0zLm1iLWxnLTAKICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvOS5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICBwLm1iLTAudGV4dC13aGl0ZSBVbiBjYXNvIGZyZWN1ZW50ZTogc2kgYWxndWllbiBhdHJvcGVsbGEgYSB1biBwZWF0w7NuIG1pZW50cmFzIGNvbmR1Y2UgZWJyaW8sIGxhIHRlb3LDrWEgZmluYWxpc3RhIGNvbmNsdXllIHF1ZSBubyBoYXkgZG9sbywgcGVybyBzw60gY3VscGEgZ3JhdmUsIGxvIHF1ZSBjb25maWd1cmEgdW4gaG9taWNpZGlvIGN1bHBvc28gKGFydC4gMTA5IEMuUC4pLiBFc3RhIHRlb3LDrWEgc3VzdGVudGEgYnVlbmEgcGFydGUgZGVsIG1vZGVsbyBwZW5hbCBjb2xvbWJpYW5vIGNvbnRlbXBvcsOhbmVvLCBxdWUgc2UgYmFzYSBlbiBlbCBhbsOhbGlzaXMgZGUgbGEgYWNjacOzbiwgaW1wdXRhY2nDs24geSByZXNwb25zYWJpbGlkYWQgcGVuYWwuCgogICAgI3RfMV8yLnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmbGlwLXVwIikKICAgICAgaDIgI1tzcGFuIDEuMl0gRXNxdWVtYXMgZGVsIGRlbGl0byB5IHN1IGltcGFjdG8gZW4gbGEgcHVuaWJpbGlkYWQKICAgIAogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctNC5vcmRlci1sZy0yLm1iLTMubWItbGctMAogICAgICAgIGZpZ3VyZQogICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvMTAucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTgub3JkZXItbGctMQogICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIEVsIGFuw6FsaXNpcyBkb2dtw6F0aWNvIGRlbCBkZWxpdG8gaGEgc2lkbyBzaXN0ZW1hdGl6YWRvIGEgbG8gbGFyZ28gZGVsIHRpZW1wbyBtZWRpYW50ZSBkaWZlcmVudGVzIGVzcXVlbWFzIHRlw7NyaWNvcywgcXVlIG5vIHNvbG8gZmFjaWxpdGFuIGxhIGNvbXByZW5zacOzbiBkZSBjw7NtbyBzZSBjb25maWd1cmEgdW5hIGNvbmR1Y3RhIHB1bmlibGUsIHNpbm8gcXVlIHRhbWJpw6luIHRpZW5lbiBlZmVjdG9zIHByw6FjdGljb3MgZGlyZWN0b3MgZW4gbGEgYXBsaWNhY2nDs24gZGUgbGEgbGV5IHBlbmFsLiBFc3RvcyBlc3F1ZW1hcyBwZXJtaXRlbiBkZXRlcm1pbmFyIHNpIHVuYSBjb25kdWN0YSBlcyBzYW5jaW9uYWJsZSB5IGJham8gcXXDqSBjb25kaWNpb25lcywgY29udmlydGnDqW5kb3NlIGVuIGhlcnJhbWllbnRhcyBlc2VuY2lhbGVzIHBhcmEgbGEgZXZhbHVhY2nDs24gZGUgbGEgcmVzcG9uc2FiaWxpZGFkIHBlbmFsIHkgbGEgdG9tYSBkZSBkZWNpc2lvbmVzIGp1ZGljaWFsZXMuCiAgICAKICAgICAgICAuYmctY29sb3ItMi5wLTQoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAgICAgICBwLm1iLTAgVW5vIGRlIGxvcyBtb2RlbG9zIG3DoXMgYWNlcHRhZG9zIGVuIGxhIGRvY3RyaW5hIHBlbmFsIGNvbnRlbXBvcsOhbmVhLCBlc3BlY2lhbG1lbnRlIGVuIGxhIGxlZ2lzbGFjacOzbiBjb2xvbWJpYW5hIChMZXkgNTk5IGRlIDIwMDApLCBlcyBlbCBlc3F1ZW1hIHRyaXBhcnRpdG8gZGVsIGRlbGl0bywgZXN0cnVjdHVyYWRvIGVuIHRyZXMgZWxlbWVudG9zIGZ1bmRhbWVudGFsZXM6IHRpcGljaWRhZCwgYW50aWp1cmlkaWNpZGFkIHkgY3VscGFiaWxpZGFkLiBFc3RlIG1vZGVsbywgaW5mbHVlbmNpYWRvIHBvciBsYSB0ZW9yw61hIGZpbmFsaXN0YSwgY29uc2VydmEgdGFtYmnDqW4gYXNwZWN0b3MgZGUgbGFzIHRlb3LDrWFzIGNsw6FzaWNhIHkgbmVvY2zDoXNpY2EsIHJlZmxlamFuZG8gdW5hIHZpc2nDs24gbW9kZXJuYSBlIGludGVncmFsIGRlbCBkZWxpdG8uCiAgICAKICAgIC5yb3cubWItNQogICAgICAuY29sLWxnLTQubWItMy5tYi1sZy0wCiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMS5wbmciLCBkYXRhLWFvcz0iem9vbS1pbiIpCiAgICAgIC5jb2wtbGctOAogICAgICAgIGgyKGRhdGEtYW9zPSJmYWRlLWxlZnQiKSBFbGVtZW50b3MgZGVsIGVzcXVlbWEgdHJpcGFydGl0bwogICAgICAgIHAubWItNSBFbCBwcmltZXIgY29tcG9uZW50ZSBlcyBsYSB0aXBpY2lkYWQsIHF1ZSBzZSByZWZpZXJlIGEgbGEgYWRlY3VhY2nDs24gZGUgdW5hIGNvbmR1Y3RhIGEgdW4gdGlwbyBwZW5hbCBwcmV2aWFtZW50ZSBlc3RhYmxlY2lkbyBwb3IgbGEgbGV5LiBTb2xvIHB1ZWRlIGNvbnNpZGVyYXJzZSBkZWxpdG8gYXF1ZWxsYSBhY2Npw7NuIHF1ZSBlbmNhamUgcGVyZmVjdGFtZW50ZSBlbiBsYSBkZXNjcmlwY2nDs24gbm9ybWF0aXZhLiBQb3IgZWplbXBsbywgdG9tYXIgdW4gYmllbiBhamVubyBjb24gw6FuaW1vIGRlIGFwcm9waWFjacOzbiwgc2luIGNvbnNlbnRpbWllbnRvIHkgY29uIHZhbG9yIGVjb27Ds21pY28sIGNvbmZpZ3VyYSBlbCBkZWxpdG8gZGUgaHVydG8gKGFydC4gMjM5IEMuUC4pLiBTaSBubyBoYXkgdGlwaWNpZGFkLCBubyBoYXkgZGVsaXRvIG5pIHB1bmliaWxpZGFkLgogICAgCiAgICAgICAgLmJnLWNvbG9yLTMucC00KGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1zdGFydAogICAgICAgICAgICAuY29sLWxnLWF1dG8KICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMi5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgICAgcC5tYi0wIEVsIHNlZ3VuZG8gZWxlbWVudG8gZXMgbGEgYW50aWp1cmlkaWNpZGFkLCBxdWUgZXhpZ2UgcXVlIGxhIGNvbmR1Y3RhIHTDrXBpY2Egc2VhIGFkZW3DoXMgY29udHJhcmlhIGFsIG9yZGVuYW1pZW50byBqdXLDrWRpY28sIGVzIGRlY2lyLCBxdWUgbm8gY29uY3VycmEgbmluZ3VuYSBjYXVzYSBkZSBqdXN0aWZpY2FjacOzbi4gU2kgYWxndWllbiBnb2xwZWEgYSBvdHJvLCBzZSBjb25maWd1cmEgdW5hIGxlc2nDs24gcGVyc29uYWw7IHNpbiBlbWJhcmdvLCBzaSBhY3TDumEgZW4gbGVnw610aW1hIGRlZmVuc2EsIGxhIGFudGlqdXJpZGljaWRhZCBkZXNhcGFyZWNlLCBsbyBxdWUgZXhjbHV5ZSBsYSBwb3NpYmlsaWRhZCBkZSBpbXBvbmVyIHVuYSBwZW5hLgogICAgCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci02Lm1iLTUKICAgICAgLnB4LTQucHgtbWQtNQogICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAuY29sLWxnLTMubWItMy5tYi1sZy0wLm9yZGVyLWxnLTIKICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvMTMuc3ZnIiwgZGF0YS1hb3M9Inpvb20taW4iKS5teC1hdXRvCiAgICAgICAgICAuY29sLWxnLTkub3JkZXItbGctMQogICAgICAgICAgICBwLm1iLTAudGV4dC13aGl0ZSBFbCB0ZXJjZXIgZWxlbWVudG8gZXMgbGEgY3VscGFiaWxpZGFkLCBlbnRlbmRpZGEgY29tbyBsYSBwb3NpYmlsaWRhZCBkZSByZXByb2NoYXIgYWwgYXV0b3Igc3UgY29uZHVjdGEuIFBhcmEgZWxsbywgc2UgcmVxdWllcmUgcXVlIGxhIHBlcnNvbmEgc2VhIGltcHV0YWJsZSwgcXVlIGhheWEgYWN0dWFkbyBjb24gY29uY2llbmNpYSBkZSBsYSBpbGljaXR1ZCB5IHF1ZSBzZSBsZSBwdWVkYSBleGlnaXIgdW4gY29tcG9ydGFtaWVudG8gZGlzdGludG8uIFBvciBlamVtcGxvLCBzaSBhbGd1aWVuIGNvbWV0ZSB1biBkZWxpdG8gZW4gZXN0YWRvIGRlIHRyYXN0b3JubyBtZW50YWwgc2V2ZXJvLCBhdW5xdWUgbGEgY29uZHVjdGEgc2VhIHTDrXBpY2EgeSBhbnRpanVyw61kaWNhLCBubyBwdWVkZSBzZXIgY3VscGFibGUgeSwgcG9yIGxvIHRhbnRvLCBubyBlcyBwdW5pYmxlLiBFbiB0YWxlcyBjYXNvcywgZWwgb3JkZW5hbWllbnRvIHByZXbDqSBtZWRpZGFzIGRlIHNlZ3VyaWRhZCBlbiBsdWdhciBkZSBwZW5hcyAoQ29uZ3Jlc28gSW50ZXJuYWNpb25hbCBkZSBKw7N2ZW5lcyBJbnZlc3RpZ2Fkb3JlcyBlbiBDaWVuY2lhcyBQZW5hbGVzLCAyMDEyKS4KCiAgICAucm93Lm1iLTUKICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMAogICAgICAgIGZpZ3VyZQogICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvMTQucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTgKICAgICAgICBoMihkYXRhLWFvcz0iZmFkZS1sZWZ0IikgSW1wYWN0byBlbiBsYSBwdW5pYmlsaWRhZAogICAgICAgIGg1IEVsIGltcGFjdG8gZGUgZXN0ZSBlc3F1ZW1hIGVzIGRpcmVjdG8geSBkZXRlcm1pbmFudGU6CiAgICAgICAgaDUgTGEgYXVzZW5jaWEgZGUgY3VhbHF1aWVyYSBkZSBsb3MgdHJlcyBlbGVtZW50b3MgZXhjbHV5ZSBsYSBwb3NpYmlsaWRhZCBkZSBpbXBvbmVyIHVuYSBwZW5hLgogICAgICAgIHAgUG9yIHRhbnRvLCBlc3RlIGFuw6FsaXNpcyBlc3RydWN0dXJhZG8gZ3XDrWEgYWwganVleiBlbiBsYSB2YWxvcmFjacOzbiBwcm9iYXRvcmlhLCBlbiBsYSBjYWxpZmljYWNpw7NuIGp1csOtZGljYSBkZWwgaGVjaG8geSBlbiBsYSBpbmRpdmlkdWFsaXphY2nDs24gZGUgbGEgc2FuY2nDs24sIHJlc3BldGFuZG8gZWwgZGViaWRvIHByb2Nlc28geSBsb3MgZGVyZWNob3MgZnVuZGFtZW50YWxlcyBkZWwgaW1wdXRhZG8uCgogICAgCiAgICAgICAgLmJnLWNvbG9yLTMucC00KGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1zdGFydAogICAgICAgICAgICAuY29sLWxnLWF1dG8KICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xNS5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgICAgcC5tYi0wIEFkZW3DoXMsIGVsIGVzcXVlbWEgdHJpcGFydGl0byBubyBzb2xvIHBlcm1pdGUgZGVjaWRpciBzaSB1bmEgY29uZHVjdGEgZXMgcHVuaWJsZSwgc2lubyB0YW1iacOpbiBjw7NtbyBkZWJlIHNlciBzYW5jaW9uYWRhLiBFbiBlbCBwcm9jZXNvIHBlbmFsLCBzaXJ2ZSBjb21vIGJhc2UgcGFyYSBldmFsdWFyIGFncmF2YW50ZXMsIGF0ZW51YW50ZXMsIGN1bHBhYmlsaWRhZCByZWR1Y2lkYSBvIGluaW1wdXRhYmlsaWRhZCwgeSBwYXJhIGFwbGljYXIgbWVkaWRhcyBkZSBzZWd1cmlkYWQgbyBzdWJyb2dhZG9zIHBlbmFsZXMgZGUgbWFuZXJhIGp1c3RhIHkgcHJvcG9yY2lvbmFsLgogICAgCiAgIAogICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIuYmctY29sb3ItMQogICAgICAuY29sLWxnLTIub3JkZXItbGctMi5tYi0zLm1iLWxnLTAKICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xNi5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAuY29sLWxnLTEwLm9yZGVyLWxnLTEKICAgICAgICBwLm1iLTAucC00IEVuIGNvbmNsdXNpw7NuLCBsb3MgZXNxdWVtYXMgZGVsIGRlbGl0byBubyBzb24gc2ltcGxlcyBjb25zdHJ1Y2Npb25lcyB0ZcOzcmljYXMsIHNpbm8gaGVycmFtaWVudGFzIG1ldG9kb2zDs2dpY2FzIGluZGlzcGVuc2FibGVzIHF1ZSBvcmllbnRhbiBlbCBlamVyY2ljaW8gbGVnw610aW1vIGRlbCBpdXMgcHVuaWVuZGkgZGVsIEVzdGFkbywgZ2FyYW50aXphbmRvIHVuYSBqdXN0aWNpYSBwZW5hbCByYWNpb25hbCwgc2lzdGVtw6F0aWNhIHkgcmVzcGV0dW9zYSBkZSBsb3MgZGVyZWNob3MgaHVtYW5vcy4KCgoKICAgIC5iZy1mdWxsLXdpZHRoLmJvcmRlci10b3AuY29sb3ItcHJpbWFyaW8KICAgICAgLnAtNC5wLW1kLTUKICAgICAgICBoMihkYXRhLWFvcz0iZmFkZS1sZWZ0IikgTUFURVJJQUwgQ09NUExFTUVOVEFSSU8KICAgICAgICAucm93Lm1hdGVyaWFsLWNvbXBsZW1lbnRhcmlvCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy03CiAgICAgICAgICAgIHAgTG9zIGludml0YW1vcyBhIGV4cGxvcmFyIGVsIG1hdGVyaWFsIGNvbXBsZW1lbnRhcmlvIGRlIGVzdGUgY3Vyc28sIGVuIGVzdGEgc2VjY2nDs24gZW5jb250cmFyw6EgcmVjdXJzb3MgcXVlIGxlIHBlcm1pdGlyw6FuIHByb2Z1bmRpemFyICB5IGVucmlxdWVjZXIgc3UgYXByZW5kaXphamUgZW4gbG9zIHRlbWFzIHRyYXRhZG9zIGVuIGVzdGEgdW5pZGFkLgoKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cHM6Ly9lbGlicm8ubmV0L2VzL2xjL3RlY25vbG9naWNhZGVsb3JpZW50ZS90aXR1bG9zLzc2NTQzCSAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBUYXJyw61vLCBNLiBDLiAoMjAwOCkuIFRlb3LDrWEgZmluYWxpc3RhIGRlbCBkZWxpdG8geSBkb2dtw6F0aWNhIHBlbmFsOiAoIGVkLikuIEVkaWNpb25lcyBDYXRoZWRyYSBKdXLDrWRpY2EuIAogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL2VsaWJyby5uZXQvZXMvZXJlYWRlci90ZWNub2xvZ2ljYWRlbG9yaWVudGUvNjEwMzY/cGFnZT01NSAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBkZWwgVmFsbGUsIEMuIFAuICgyMDA4KS4gRXN0dWRpb3Mgc29icmUgbG9zIGZ1bmRhbWVudG9zIGRlbCBkZXJlY2hvIHBlbmFsOiAoZWQuKS4gRHlraW5zb24uIAogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3d3dy5yZWRhbHljLm9yZy9wZGYvNTY4MS81NjgxNjAzNjYwMjIucGRmICIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIFRlaXhpZG9yLCBELiwgKDIwMTEpLiBFTiBUT1JOTyBBIExBIElNUFVUQUNJw5NOIFNVQkpFVElWQSBERSBDT01QT1JUQU1JRU5UTy4gUmV2aXN0YSBkZSBsYSBGYWN1bHRhZCBkZSBEZXJlY2hvLCAoMzApLCAyOTEtMzA3LiAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0id3d3LnRyaWJ1bmFsc3VwZXJpb3Jhcm1lbmlhLmdvdi5jby9tZWRpb3MvYXBvcnRlcy9Fc3F1ZW1hc190ZXJpY29zX2RlbF9kZWxpdG9feV9jcmltaW5hbGlkYWRfY29udGVtcG9yYW5lYS5wZGYgIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgQXJ0dXJvIFNhbGFzICgyMDE2KSBFU1FVRU1BUyBURcOTUklDT1MgREVMIERFTElUTyBZIENSSU1JTkFMSURBRCBDT05URU1QT1LDgU5FQSAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cDovL3d3dy5zY2llbG8ub3JnLmNvL3NjaWVsby5waHA/c2NyaXB0PXNjaV9hcnR0ZXh0JnBpZD1TMDEyNC03NDQxMjAxNjAwMDEwMDAwNSAgIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgVmVnYSBBcnJpZXRhLCBIYXJvbGQuICgyMDE2KS4gRWwgYW7DoWxpc2lzIGdyYW1hdGljYWwgZGVsIHRpcG8gcGVuYWwuIEp1c3RpY2lhLCAoMjkpLCA1My03MS4gCgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy90ZW1wbGF0ZS9pY29uby15dC5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj10b1NPZVRqLTh3TSAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBTRlBJRSBVVi4gKDIwMTksIDIxIGRlIG9jdHVicmUpLiBFc3RydWN0dXJhIGRlbCBkZWxpdG8uIFtWw61kZW9dLiBZb3VUdWJlLiAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9dF84Y3AxZ0h2akUgIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgRk0gRW4gVHJhbnNpdG8uICgyMDI0LCAxNiBkZSBtYXlvKS4gwr9UaWVuZSBzZW50aWRvIGxhIGJhamEgZGUgZWRhZCBkZSBwdW5pYmlsaWRhZD8gW1bDrWRlb10uIFlvdVR1YmUuICAKCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy0zLm9mZnNldC1sZy0xCiAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL21hdGVyaWFsLWNvbXBsZW1lbnRhcmlvLnN2ZycsIGFsdD0nJykKCg=="},null]}